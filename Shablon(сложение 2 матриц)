#include <iostream>
#include <ctime>
#include <cstdio>

template <typename T>
T randInt(T start, T end)
{
    return rand() % (end - start + 1) + start; // Генерация случайного числа
}

template <typename T>
void Arrra(T** arr, int rows, int cols) 
{
    for (int i = 0; i < rows; i++)
    {
        for (int j = 0; j < cols; j++)
        {
            printf("%d ", arr[i][j]); // Вывод элемента матрицы
        }
        printf("\n"); // Вывод новой строки после каждой строки матрицы
    }
}

template <typename T>
void SumArr(T** arr1, T** arr2, int rows, int cols) 
{
    T** result = new T*[rows]; // Создание матрицы для хранения результата сложения
    for (int i = 0; i < rows; i++)
    {
        result[i] = new T[cols]; // Выделение памяти для каждого ряда
        for (int j = 0; j < cols; j++)
        {
            result[i][j] = arr1[i][j] + arr2[i][j]; // Сложение элементов
        }
    }

    printf("Сумма:\n");
    Arrra(result, rows, cols); // Вывод результата

    
}

int main()
{
    srand(time(0)); 
    int start = 0; 
    int end = 100; 
    int rows = 2; 
    int cols = 3; 
    
    // Создание матрицы
    int** a = new int*[rows];
    int** b = new int*[rows];
    for (int i = 0; i < rows; i++)
    {
        a[i] = new int[cols];
        b[i] = new int[cols];
    }

    for (int i = 0; i < rows; i++) // Заполнение матрицы случайными числами
    {
        for (int j = 0; j < cols; j++)
        {
            a[i][j] = randInt(start, end); // Заполнение первой матрицы
            b[i][j] = randInt(start, end); // Заполнение второй матрицы
        }
    }

    printf("Матрица 1:\n");
    Arrra(a, rows, cols); // Печать первого массива
    printf("\nМатрица 2:\n");
    Arrra(b, rows, cols); // Печать второго массива

    SumArr(a, b, rows, cols); // Сложение массивов

    return 0; // Завершение программы
}
