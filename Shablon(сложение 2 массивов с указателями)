#include <iostream>
#include <ctime>

template <typename T>
T randInt(T start, T end)
{
    return rand() % (end - start + 1) + start; // Генерация случайного числа
}

template <typename T>
void Arrra(T (&arr)[2][3], int rows, int cols) // Изменено на ссылку
{
    for (int i = 0; i < rows; i++)
    {
        for (int j = 0; j < cols; j++)
        {
            printf("%d", arr[i][j]); // Вывод элемента массива
        }
        printf("\n"); // Вывод новой строки после каждой строки массива
    }
}

template <typename T>
void SumArr(T (&arr1)[2][3], T (&arr2)[2][3], int rows, int cols) // Изменено на ссылки
{
    T result[2][3]; // Массив для хранения результата сложения
    for (int i = 0; i < rows; i++)
    {
        for (int j = 0; j < cols; j++) 
        {
            result[i][j] = arr1[i][j] + arr2[i][j]; // Сложение элементов
        }
    }
    printf("Сумма:\n");
    Arrra(result, rows, cols); // Вывод результата
}

int main()
{
    srand(time(0)); 
    int start = 0; 
    int end = 100; 
    int rows = 2; 
    int cols = 3; 
    int a[2][3]; 
    int b[2][3]; 

    for (int i = 0; i < rows; i++) // Заполнение массивов случайными числами
    {
        for (int j = 0; j < cols; j++)
        {
            a[i][j] = randInt(start, end); // Заполнение первого массива
            b[i][j] = randInt(start, end); // Заполнение второго массива
        }
    }

    printf("Матрица 1:\n");
    Arrra(a, rows, cols); // Печать первого массива
    printf("\nМатрица 2:\n");
    Arrra(b, rows, cols); // Печать второго массива

    SumArr(a, b, rows, cols); // Сложение массивов

    return 0; // Завершение программы
}
